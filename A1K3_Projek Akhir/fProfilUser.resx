<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wgARCALgAuADASIAAhEBAxEB/8QA
        GgABAQEBAQEBAAAAAAAAAAAAAAQDAgUBBv/EABQBAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhADEAAA
        Af3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0ct9CRb0QL+SJXmYOu
        QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAamW9PZnoAAAADPQR4enwee1yAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABacUgAAAAAAAAmpHmLYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUmmwAAAAA
        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
        S+RbXNsA3tLELm5C0MOBW6uODWz1GV1oMLO0Lq0LMDDu7gw7sov4i7i3mLKMruMtH//aAAwDAQACAAMA
        AAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIIEEIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAEc8888sIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM88888888
        88MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEc8888888888sIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAM888888888888IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE88888888888888IAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAA8888888888888888AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc88888888888888oAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAU88888888888888oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA088888888
        8888888AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU88888888888888oAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAA88888888888884AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw888888888888wAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAQY8888888888kgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQY88888888kgAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQE408880AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw
        QgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEks8cs8cYIIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEY888888888888kIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIM8888
        8888888888MMAAAAAAAAAAAAAAAAAAAAAAAAAAAc88888888888888888ssAAAAAAAAAAAAAAAAAAAAA
        AAAAMc888888888888888888sMAAAAAAAAAAAAAAAAAAAAAAAQ8888888888888888888888AAAAAAAA
        AAAAAAAAAAAAAAEk8888888888888888888888YIAAAAAAAAAAAAAAAAAAAAE8888888888888888888
        88888IAAAAAAAAAAAAAAAAAAAAc888888888888888888888888sAAAAAAAAAAAAAAAAAAAQ88888888
        888888888888888888gAAAAAAAAAAAAAAAAAAU88888888888888888888888888sAAAAAAAAAAAAAAA
        AAA0888888888888888888888888884AAAAAAAAA/8QAFBEBAAAAAAAAAAAAAAAAAAAAsP/aAAgBAwEB
        PxAET//EABQRAQAAAAAAAAAAAAAAAAAAALD/2gAIAQIBAT8QBE//xAArEAEAAQIGAgEEAwADAQAAAAAB
        EQAhMUFQUWFxQGCRgaHB0TCx8BAgkLD/2gAIAQEAAT8Q/wDju4+OYtX7aaBjeiKCxTuhs/lp2fy0sYHV
        GYTsmv001hY5y9QBWAlq/fUY1ezmXV1/D3V6Zt7Ku30GNIjCQ+mQr9dn1Q3zGL/ON8RiVKv02XfpISgX
        WrQhctnfh3hA57uqSFGyejIAKtgKAka/t4oFjP70iAiWR9ELtqEiv+3jixW/emzDj6HgF1/Pk4xdT+/Q
        ohYbrigAAIDA8lBESRyqYGO649BhhM79PLlgM79PQLy3Hm2lsNfu/Fz9PNs/Fz9NeCAxWKI3AR5pOYCK
        CixGHXeOH9PP44/212bYQ8+Lda6F3kPPF3lNd/wcef8A6ONddrh/Xnu1/ltdudT59zuddiRuefMDY13b
        Qu8/bRs17ctL9+buWFu9fsv0/Pm2T7fjX1AyaAEkSTywRIAlpUM30CZJcv028uMS7fpt6CpcJJWclibP
        k5SWBu0pcpL6E92XCfmgBJG4+OCJAXWllLYT8+iIi8vtQiCMnirBKwFSJoHoxYztQEgjgnhkyAGK0s5z
        0izIWKqcPksTwZw+AxayAGA9KQFImZTEBPDGp8A4/lmwDmmZCOWNIilXN9NnSW5VlI74NY6nsKAShOGf
        +4EoDlrDk9qWkjvi1Okt19SRSkeKw3616Fm+6GZ8NOR8NKzPVMYi4tSKUru/+m8m/wDzJv6mCsArtWAo
        N7Kb9oJo/wCirdHbRhvjoHD4iuB8VwPilcfiKXx+OtkdLT/2VE+8EViKTe6kRhEdvSgVgFdirkA/L4rG
        K+bFBQJwfzhQJyVjFfFyrkA/L4pEYRHZ9FmwXFPZ/wBG9EwPTxSYHtWO/wCjepsFz6CSBVkVNCRw/LUE
        A2PJggGzUUpPL8NMgQZOvQq7mfVQK5muL5sCuZJiVKDqZd62CgCrkUECnJkO6y8/K9BK18D1SKQImTrA
        2YqlmJj+mhyzALftTwoGrDh7cioq3zzOi51cnMqHPTk6oGPt2oN9dzdHTfTcyk59O+pEnKrEA4ru6TgA
        cR2aZHA1AFQCVyopORxxpYSQyOeKRFEhMtPiIr5fzps5HfIf3p1od79KCCCxpqCQklWAM79NMBUAlbUY
        dy50807lzSIokJbS5ULWdtRhQtZ20pr4TBR4KDUTwUKYxAYdJiFaw71OIVrHvSZTxiXvU4TxiTvSIemY
        1WHhkNHiVioOjVZBYqHp0fe0L96rvalu9G5xGr8YrRbjuOr3XYdFsdRq9juPD//Z
</value>
  </data>
</root>